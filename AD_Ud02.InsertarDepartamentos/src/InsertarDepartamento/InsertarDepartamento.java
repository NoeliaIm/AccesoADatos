/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package InsertarDepartamento;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Isabel
 */
public class InsertarDepartamento extends javax.swing.JFrame {

    public ConexionBd BD = new ConexionBd();
    public Connection conexion = BD.conectar("oracle");

    public InsertarDepartamento() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDept_No = new javax.swing.JTextField();
        txtDNombre = new javax.swing.JTextField();
        txtLoc = new javax.swing.JTextField();
        BtnGrabar = new javax.swing.JButton();
        BtnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Insertar Departamentos");

        jLabel1.setText("Código Departamento");

        jLabel2.setText("Nombre");

        jLabel3.setText("Localidad");

        txtDept_No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDept_NoActionPerformed(evt);
            }
        });
        txtDept_No.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDept_NoKeyTyped(evt);
            }
        });

        txtDNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDNombreActionPerformed(evt);
            }
        });
        txtDNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDNombreKeyTyped(evt);
            }
        });

        txtLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLocActionPerformed(evt);
            }
        });
        txtLoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLocKeyTyped(evt);
            }
        });

        BtnGrabar.setText("Grabar");
        BtnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGrabarActionPerformed(evt);
            }
        });

        BtnSalir.setText("Salir");
        BtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnGrabar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDept_No, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(txtLoc))))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDept_No, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnGrabar)
                    .addComponent(BtnSalir))
                .addContainerGap(129, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirActionPerformed

        BD.cerrar();
        System.exit(0);
    }//GEN-LAST:event_BtnSalirActionPerformed

    private void BtnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGrabarActionPerformed
        try {
            if ("".equals(txtDept_No.getText())) {
                JOptionPane.showMessageDialog(null, "El código del departamento no puede estar vacío");
                //txtDNombre.setText("");
                txtDept_No.requestFocus();
            } else {
                if ("".equals(txtDNombre.getText())) {
                    JOptionPane.showMessageDialog(null, "El nombre del departamento no puede estar vacío");
                    //txtDNombre.setText("");
                    txtDNombre.requestFocus();
                } else {
                    String sql = "INSERT INTO DEPARTAMENTOS VALUES(?,?,?,0)";
                    PreparedStatement sentencia = conexion.prepareStatement(sql);
                    sentencia.setInt(1, Integer.parseInt(txtDept_No.getText()));
                    sentencia.setString(2, txtLoc.getText());
                    sentencia.setString(3, txtLoc.getText());
                    Integer filas = sentencia.executeUpdate();
                    if (filas == 0) {
                        JOptionPane.showMessageDialog(null, "Error al grabar el registro ");
                    } else {
                        JOptionPane.showMessageDialog(null, "Registro Grabado ");
                    }
                    sentencia.close();
                    limpiarDatos();
                    txtDept_No.requestFocus();
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al grabar el registro ");
        }

    }//GEN-LAST:event_BtnGrabarActionPerformed

    private void txtDNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDNombreKeyTyped

        if (txtDNombre.getText().length() == 50) {
            evt.consume();
        }
        if (!Character.isAlphabetic(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDNombreKeyTyped

    private void txtLocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLocKeyTyped

        if (txtLoc.getText().length() == 40) {
            evt.consume();
        }
        if (!Character.isAlphabetic(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtLocKeyTyped

    private void txtDept_NoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDept_NoKeyTyped

        if (txtDept_No.getText().length() == 5) {
            evt.consume();
        }
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDept_NoKeyTyped

    private void txtDept_NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDept_NoActionPerformed

        try {
            if ("".equals(txtDept_No.getText())) {
                JOptionPane.showMessageDialog(null, "El código del departamento no puede estar vacío");
                txtDept_No.requestFocus();
            } else {
                if (existe_departamento(txtDept_No.getText())) {
                    JOptionPane.showMessageDialog(null, "Departamento existente ");
                    txtDept_No.setText("");
                    txtDept_No.requestFocus();
                } else {
                    txtDNombre.requestFocus();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(InsertarDepartamento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtDept_NoActionPerformed

    private void txtDNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDNombreActionPerformed

        if ("".equals(txtDNombre.getText())) {
            JOptionPane.showMessageDialog(null, "El nombre del departamento no puede estar vacío");
            //txtDNombre.setText("");
            txtDNombre.requestFocus();
        } else {
            txtLoc.requestFocus();
        }
    }//GEN-LAST:event_txtDNombreActionPerformed

    private void txtLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLocActionPerformed

        BtnGrabar.requestFocus();
    }//GEN-LAST:event_txtLocActionPerformed

    private void limpiarDatos() {
        txtDept_No.setText("");
        txtDNombre.setText("");
        txtLoc.setText("");

    }

    private boolean existe_departamento(String dept_no)
            throws SQLException {
        Boolean encontrado;
        String sql = "SELECT * FROM DEPARTAMENTOS WHERE DEPT_NO =" + dept_no;
        Statement sentencia = conexion.createStatement();
        ResultSet resultado = sentencia.executeQuery(sql);
        encontrado = resultado.next();
        sentencia.close();
        resultado.close();
        return encontrado;
    }// fin ComprobarIdCliente

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InsertarDepartamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InsertarDepartamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InsertarDepartamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InsertarDepartamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InsertarDepartamento().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnGrabar;
    private javax.swing.JButton BtnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtDNombre;
    private javax.swing.JTextField txtDept_No;
    private javax.swing.JTextField txtLoc;
    // End of variables declaration//GEN-END:variables
}
