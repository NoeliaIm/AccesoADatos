/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ad_seguro_vehiculos;

import java.awt.event.ItemEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Fernando
 */
public class InformacionVehiculos extends javax.swing.JDialog {

    /**
     * Creates new form InformacionVehiculos
     */
    public InformacionVehiculos() {
        
        initComponents();
        
        this.setTitle("AÃ±adir Vehiculo");
        
        this.setModal(true);
        
        codigoOperacion=frmPrincipal.INSERT;
        
        //Devuelve la conexion de principal
        conexion=frmPrincipal.devConexion();
        
        iniciarComboBox();
        
        //Evita pegar texto en los campos
        MetodosComunes.evitarPegar(txtMatricula);
        MetodosComunes.evitarPegar(txtPotencia);
        
    }
    
    public InformacionVehiculos(int idVehiculo ) {
        
        initComponents();
        
        this.setTitle("Modificar Vehiculo");
        
        this.setModal(true);
        
        //Devuelvo la conexion del principal
        conexion=frmPrincipal.devConexion();
        
        iniciarComboBox();
        
        codigoOperacion=frmPrincipal.UPDATE;
        
        idVehiculoActual=idVehiculo;
        
        rellenaDatos(idVehiculo);
        
        //Evita pegar texto en los campos
        MetodosComunes.evitarPegar(txtMatricula);
        MetodosComunes.evitarPegar(txtPotencia);
        
    }

    //Rellena los datos, en caso de que se pulse en modificar
    private void rellenaDatos(int id){
    
        conexion.ejecutarConsulta("select * from s_vehiculos where idvehiculo="+id+"");
    
        ResultSet aux=conexion.getResultSet();
        
        //Rellenos los datos segun la consulta
        try {
            
            aux.next();
            
            txtMatricula.setText(aux.getString("matricula"));
            
            MetodosComunes.asignarItemCmb2Columnas(cmbDNI, aux.getInt("idcliente"));
            
            txtPotencia.setText(String.valueOf(aux.getInt("potencia")));
            
            if (aux.getString("tipopago").equals("S")){
                cmbTipoPago.setSelectedIndex(1);
            }else{
                cmbTipoPago.setSelectedIndex(2);
            }
            
            switch(aux.getString("tipo_seguro")){
                case "O":
                    cmbTipoSeguro.setSelectedIndex(1);
                    break;
                case "F":
                    cmbTipoSeguro.setSelectedIndex(2);
                    break;
                case "T":
                    cmbTipoSeguro.setSelectedIndex(3);
                    break;
            }
            
            int idModelo=aux.getInt("idmodelo");
            
            int idMarca=conexion.devolverValorInt("idmarca", "s_modelos", "idmodelo="+idModelo+"");
            
            MetodosComunes.asignarItemCmb2Columnas(cmbMarca, idMarca);
            
            MetodosComunes.asignarItemCmb2Columnas(cmbModelo, idModelo);
            
        } catch (SQLException ex) {
            Logger.getLogger(InformacionVehiculos.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    }
    
    //Inicia todos los comboBoxes
    private void iniciarComboBox(){
        
        conexion.rellenaComboBox2Columnas(cmbDNI, 
                                        CONSULTACLIENTES,
                                        "--Elige Cliente--", 
                                        "idcliente",
                                        "dni");
        
        MetodosComunes.rellenaComboBox(cmbTipoPago, PAGOS);
        
        conexion.rellenaComboBox2Columnas(cmbMarca, 
                                        CONSULTAMARCA,
                                        "--Elige Marca--", 
                                        "idmarca",
                                        "marca");
        
        MetodosComunes.rellenaComboBox(cmbTipoSeguro, SEGUROS);
       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMatricula = new javax.swing.JTextField();
        cmbDNI = new javax.swing.JComboBox();
        txtPotencia = new javax.swing.JTextField();
        cmbTipoPago = new javax.swing.JComboBox();
        cmbMarca = new javax.swing.JComboBox();
        cmbModelo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnGrabar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblControlLongitudMatricula = new javax.swing.JLabel();
        lblControlPotencia = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbTipoSeguro = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Informacion vehiculo");
        setResizable(false);

        txtMatricula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMatriculaKeyTyped(evt);
            }
        });

        cmbDNI.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtPotencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPotenciaKeyTyped(evt);
            }
        });

        cmbMarca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMarca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMarcaItemStateChanged(evt);
            }
        });

        cmbModelo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Matricula");

        jLabel2.setText("DNI");

        jLabel3.setText("Potencia");

        jLabel4.setText("Tipo de pago");

        jLabel6.setText("Marca");

        jLabel7.setText("Modelo");

        btnGrabar.setText("Grabar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel5.setText("Tipo seguro");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbDNI, 0, 120, Short.MAX_VALUE)
                            .addComponent(txtPotencia)
                            .addComponent(cmbTipoPago, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMatricula)
                            .addComponent(cmbTipoSeguro, 0, 120, Short.MAX_VALUE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblControlLongitudMatricula, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(lblControlPotencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(79, 79, 79)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(118, 118, 118)
                                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(37, 37, 37)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cmbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(69, 69, 69))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblControlLongitudMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblControlPotencia, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPotencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTipoSeguro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnGrabar))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed

        
        String error="";
        
        Object errores[][]={
                            {txtMatricula, txtPotencia}, 
                            { "La matricula no puedeser nula", "Escribe la potencia del coche"}
                            };
        
        error+=MetodosComunes.comprobarVacios(errores);
        
        if(!txtMatricula.getText().matches("([0-9]{4}[a-zA-ZÃ±Ã]{3})")){
            error+="- El formato de la matricula no es correcta\n";
        }
        
        if(conexion.existeValor(txtMatricula.getText().toUpperCase(), "s_vehiculos", "matricula") && codigoOperacion==frmPrincipal.INSERT){
            error+="- La matricula ya existe\n";
        }
        
        if(MetodosComunes.devolverCodigoComboBox(cmbDNI)==-1){
            error+="- Debes elegir un DNI \n";
        }
        
        if(cmbTipoPago.getSelectedIndex()==0){
            error+="- Elige un tipo de pago \n";
        }
        
        if(MetodosComunes.devolverCodigoComboBox(cmbMarca)==-1){
            error+="Elige una marca de vehiculo\n";
        }
        
        if(MetodosComunes.devolverCodigoComboBox(cmbModelo)==-1){
            error+="- Elige un modelo de vehiculo\n";
        }
        
        if(cmbTipoSeguro.getSelectedIndex()==0){
            error+="Elige un tipo de seguro\n";
        }
        
        //Si no hay errores, completa la operacion
        if(error.equals("")){

            //Obtenemos los datos comunes, que necesitaremos si insertamos o actualizamos
            int idCliente=MetodosComunes.devolverCodigoComboBox(cmbDNI);

            char tipoPago=cmbTipoPago.getSelectedItem().toString().charAt(0);

            int idModelo=MetodosComunes.devolverCodigoComboBox(cmbModelo);

            char tipoSeguro=cmbTipoSeguro.getSelectedItem().toString().charAt(0);
            
            //Insertar
            if (codigoOperacion==frmPrincipal.INSERT){
            
                idVehiculoActual=conexion.proximoIDDisponible("idvehiculo", "s_vehiculos");
                
                
                conexion.ejecutarInstruccion("insert into s_vehiculos values("
                                            + ""+idVehiculoActual+","
                                            + "'"+txtMatricula.getText().toUpperCase()+"',"
                                            + ""+txtPotencia.getText()+","
                                            + "'"+tipoPago+"', "
                                            + ""+idModelo+","
                                            + ""+idCliente+","
                                            + "'"+tipoSeguro+"',"
                                            + "0)");
            
                conexion.commit();
                
                JOptionPane.showMessageDialog(this, "Vehiculo insertado", "Exito", JOptionPane.INFORMATION_MESSAGE);
                
                this.setVisible(false);
              
            //Actualizar
            }else{
                
                conexion.ejecutarInstruccion("update s_vehiculos "
                                            + "set matricula='"+txtMatricula.getText().toUpperCase()+"',"
                                            + "potencia="+txtPotencia.getText()+","
                                            + "tipopago='"+tipoPago+"',"
                                            + "idmodelo="+idModelo+","
                                            + "idcliente="+idCliente+","
                                            + "tipo_seguro='"+tipoSeguro+"'"
                                            + "where idvehiculo="+idVehiculoActual+"");
                
                conexion.commit();
                
                JOptionPane.showMessageDialog(this, "Vehiculo modificado", "Exito",JOptionPane.INFORMATION_MESSAGE);
                
                this.setVisible(false);
                
            }
            
        }else{
            JOptionPane.showMessageDialog(this, error,"errores", JOptionPane.ERROR_MESSAGE);
        }
           
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtMatriculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaKeyTyped
       
        MetodosComunes.noEscribirMasDe(txtMatricula, 7,evt, lblControlLongitudMatricula);
        
    }//GEN-LAST:event_txtMatriculaKeyTyped

    private void txtPotenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPotenciaKeyTyped
        
        MetodosComunes.escribirSoloNumeros(evt, lblControlPotencia);
        
        
    }//GEN-LAST:event_txtPotenciaKeyTyped

    private void cmbMarcaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMarcaItemStateChanged
        
        //Rellena los modelos segun la marca
        if(evt.getStateChange()==ItemEvent.SELECTED){
            
            String consulta="select idmodelo, modelo "
                            + "from s_modelos "
                            + "where eliminado=0 "
                            + "and "
                            + "idmarca="+MetodosComunes.devolverCodigoComboBox(cmbMarca)+"";
            
            conexion.rellenaComboBox2Columnas(cmbModelo, 
                                                consulta, 
                                                "--Elige un modelo--", 
                                                "idmodelo", 
                                                "modelo");
            
        }
        
        
    }//GEN-LAST:event_cmbMarcaItemStateChanged

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JComboBox cmbDNI;
    private javax.swing.JComboBox cmbMarca;
    private javax.swing.JComboBox cmbModelo;
    private javax.swing.JComboBox cmbTipoPago;
    private javax.swing.JComboBox cmbTipoSeguro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblControlLongitudMatricula;
    private javax.swing.JLabel lblControlPotencia;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtPotencia;
    // End of variables declaration//GEN-END:variables
    private int codigoOperacion;
    private int idVehiculoActual;
    private ConexionDB conexion;
    
    //Constantes
    private final String CONSULTACLIENTES="select idcliente, dni "
                                            + "from s_clientes "
                                            + "where eliminado=0";
    private final String[] PAGOS={"--Elige tipo de pago--","Semestral","Anual"};
    private final String[] SEGUROS={"--Elige tipo de seguro--", "Obligatorio", "Franquicia","Todo Riesgo"};
    private final String CONSULTAMARCA="select idmarca, marca "
                                        + "from s_marcas "
                                        + "where eliminado=0";
 
    
}

