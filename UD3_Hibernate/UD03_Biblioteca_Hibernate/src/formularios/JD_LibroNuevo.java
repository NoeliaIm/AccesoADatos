/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import conexion.HibernateUtil;
import funciones.MetodosComunes;
import java.awt.event.KeyEvent;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import modelo.Beditoriales;
import modelo.Blibros;
import modelo.Bmaterias;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

/**
 *
 * @author Juan
 */
public class JD_LibroNuevo extends javax.swing.JDialog {

    //public SessionFactory instanciaHibernate = HibernateUtil.getSessionFactory();
    private String idLibro;
    private boolean esNuevo = false;
    private MetodosComunes funciones = new MetodosComunes();

    /**
     * Creates new form JD_LibroNuevo
     */
    public JD_LibroNuevo(java.awt.Frame parent, boolean modal, String idLibro) {
        super(parent, modal);
        this.idLibro = idLibro;
        if (this.idLibro.equals("0")) {
            esNuevo = true;
        }
        initComponents();
        llenarEditorialHibernate();
        llenarMateriaHibernate();
        rellenarCamposHibernate();
    }

    public void rellenarCamposHibernate() {
        if (!esNuevo) {
            String sql = "FROM Blibros WHERE idlibro = " + idLibro;
            Session sesion = JF_Menu.instanciaHibernate.openSession();
            Query consulta = sesion.createQuery(sql);
            Iterator iter = consulta.iterate();
            Blibros lib = (Blibros) iter.next();
            txtISBN.setText(Long.toString(lib.getIsbn()));
            txtTitulo.setText(lib.getTitulo());
            txtAutores.setText(lib.getAutores());
            txtNCopias.setText(Byte.toString(lib.getNrocopiastot()));
            cboEditorial.setSelectedIndex(lib.getBeditoriales().getIdeditorial());
            cboMateria.setSelectedIndex(lib.getBmaterias().getIdmateria());
            txtAnio.setText(Short.toString(lib.getAniopublic()));
            txtPaginas.setText(Integer.toString(lib.getNropaginas()));
            txtTraductor.setText(lib.getTraductor());
            txtIdioma.setText(lib.getIdioma());
            txtEstanteria.setText(Integer.toString(lib.getEstanteria()));
            txtBalda.setText(Integer.toString(lib.getBalda()));
            txtPrecio.setText(Integer.toString(lib.getPreciocompra()));
            sesion.close();
        }

    }

    public void llenarEditorialHibernate() {
        cboEditorial.removeAllItems(); //Borra todos los Items
        Session sesion = JF_Menu.instanciaHibernate.openSession();
        Query consulta = sesion.createQuery("FROM Beditoriales e ORDER BY e.nombre");
        cboEditorial.addItem(new String("--Seleccione Editorial--")); //Los añade al Combo con dos columnas
        Iterator iter = consulta.iterate();
        Beditoriales edit;
        while (iter.hasNext()) {
            edit = (Beditoriales) iter.next();
            cboEditorial.addItem(edit); //Los añade al Combo con dos columnas
        }

    }

    public void llenarMateriaHibernate() {

        cboMateria.removeAllItems(); //Borra todos los Items
        Session sesion = JF_Menu.instanciaHibernate.openSession();
        Query consulta = sesion.createQuery("FROM Bmaterias m ORDER BY m.descmateria");
        cboMateria.addItem(new String("--Seleccione Materia--")); //Los añade al Combo con dos columnas
        Iterator iter = consulta.iterate();
        Bmaterias mat;
        while (iter.hasNext()) {
            mat = (Bmaterias) iter.next();
            cboMateria.addItem(mat);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cboEditorial = new javax.swing.JComboBox();
        cboMateria = new javax.swing.JComboBox();
        txtISBN = new javax.swing.JTextField();
        txtTitulo = new javax.swing.JTextField();
        txtAutores = new javax.swing.JTextField();
        txtNCopias = new javax.swing.JTextField();
        txtAnio = new javax.swing.JTextField();
        txtPaginas = new javax.swing.JTextField();
        txtTraductor = new javax.swing.JTextField();
        txtIdioma = new javax.swing.JTextField();
        txtEstanteria = new javax.swing.JTextField();
        txtBalda = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        btnGrabar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtError = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("NUEVO LIBRO");

        jLabel1.setText("ISBN");

        jLabel2.setText("Titulo");

        jLabel3.setText("Autores");

        jLabel4.setText("Nº Copias Totales");

        jLabel7.setText("Año Publicacion");

        jLabel8.setText("Nº Paginas");

        jLabel9.setText("Traductor");

        jLabel10.setText("Idioma");

        jLabel11.setText("Estanteria");

        jLabel12.setText("Balda");

        jLabel13.setText("Precio Compra");

        txtISBN.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtISBNPropertyChange(evt);
            }
        });
        txtISBN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtISBNKeyTyped(evt);
            }
        });

        txtTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTituloKeyTyped(evt);
            }
        });

        txtAutores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAutoresKeyTyped(evt);
            }
        });

        txtNCopias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNCopiasKeyTyped(evt);
            }
        });

        txtAnio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAnioKeyTyped(evt);
            }
        });

        txtPaginas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPaginasKeyTyped(evt);
            }
        });

        txtTraductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTraductorKeyTyped(evt);
            }
        });

        txtIdioma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdiomaKeyTyped(evt);
            }
        });

        txtEstanteria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEstanteriaKeyTyped(evt);
            }
        });

        txtBalda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBaldaKeyTyped(evt);
            }
        });

        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });

        jLabel5.setText("Editorial");

        jLabel6.setText("Materia");

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/EXIT_ (23).jpg"))); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnGrabar.setText("Añadir");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jLabel14.setText("MENSAJES:");

        txtError.setEditable(false);
        txtError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGrabar)
                .addGap(30, 30, 30)
                .addComponent(btnLimpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(txtError))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(51, 51, 51)
                                    .addComponent(txtAutores, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(63, 63, 63)
                                .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(47, 47, 47))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(32, 32, 32)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNCopias, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addGap(26, 26, 26)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addGap(40, 40, 40)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cboMateria, javax.swing.GroupLayout.Alignment.LEADING, 0, 229, Short.MAX_VALUE)
                                    .addComponent(cboEditorial, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTraductor, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtEstanteria, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtBalda, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(0, 35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAutores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNCopias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboEditorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtPaginas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTraductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtEstanteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtBalda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSalir)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGrabar)
                            .addComponent(btnLimpiar))
                        .addGap(20, 20, 20))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed
    private String ponerStringNulo(JTextField txt, boolean verdad) {
        String valor = "";
        if (txt.getText().isEmpty()) {
            valor = null;
        } else {
            valor = txt.getText();
        }
        return valor;
    }

    private String ponerStringNulo(JTextField txt) {
        String valor = "'";
        if (txt.getText().isEmpty()) {
            valor = null;
        } else {
            valor = valor + txt.getText() + "'";
        }
        return valor;
    }

    /**
     * Si da error el dato será igual a -1
     *
     * @param txt
     * @return
     */
    private boolean comprobarVacios() {
        boolean estanVacios = false;
        String texto = "ERROR:\n";
        if (txtISBN.getText().isEmpty()) {
            texto = texto + "Rellene el campo ISBN\n";
            estanVacios = true;
        }
        if (txtTitulo.getText().isEmpty()) {
            texto = texto + "Rellene el campo Título\n";
            estanVacios = true;
        }
        if (txtAutores.getText().isEmpty()) {
            texto = texto + "Rellene el campo Autores\n";
            estanVacios = true;
        }
        if (txtNCopias.getText().isEmpty()) {
            texto = texto + "Rellene el campo Nº Copias\n";
            estanVacios = true;
        }
        if (cboEditorial.getSelectedIndex() == 0) {
            texto = texto + "Seleccione una editorial\n";
            estanVacios = true;
        }
        if (cboMateria.getSelectedIndex() == 0) {
            texto = texto + "Seleccione una materia";
            estanVacios = true;
        }
        if (estanVacios) {
            JOptionPane.showMessageDialog(null, texto);
        }
        return estanVacios;

    }

    private void nuevo_hibernate() {
        if (!isEmpty()) {
            if (!esNuevo) {
                Session sesion = JF_Menu.instanciaHibernate.openSession();
                Transaction transaccion = sesion.beginTransaction();
                Blibros lib = (Blibros) sesion.load(Blibros.class, Integer.parseInt(idLibro));
                lib.setIsbn(Long.parseLong(txtISBN.getText()));
                lib.setTitulo(txtTitulo.getText());
                lib.setAutores(txtAutores.getText());
                lib.setNrocopiastot(Byte.parseByte(txtNCopias.getText()));
                lib.setNrocopiasdisp(Byte.parseByte(txtNCopias.getText()));
                lib.setBeditoriales((Beditoriales) cboEditorial.getSelectedItem());
                lib.setBmaterias((Bmaterias) cboMateria.getSelectedItem());
                lib.setAniopublic(Short.parseShort(txtAnio.getText()));
                lib.setNropaginas(Integer.parseInt(txtPaginas.getText()));
                lib.setTraductor(txtTraductor.getText());
                lib.setIdioma(txtIdioma.getText());
                lib.setEstanteria(Integer.parseInt(txtEstanteria.getText()));
                lib.setBalda(Integer.parseInt(txtBalda.getText()));
                lib.setPreciocompra(Integer.parseInt(txtPrecio.getText()));
                lib.setEliminado(false);

                sesion.update(lib);
                transaccion.commit();
                sesion.close();
                JOptionPane.showMessageDialog(null, "Registro Actualizado");
                this.dispose();

            } else {

                if (!existe_libro_hibernate(txtISBN.getText(), "b.isbn")) {
                    SessionFactory instancia = HibernateUtil.getSessionFactory();
                    Session sesion = instancia.openSession();
                    Transaction tx = sesion.beginTransaction();
                    System.out.println("Inserto una fila en la tabla BLIBROS");
                    Blibros lib = new Blibros();
                    Integer idLibro = maximo_hibernate("Blibros", "idlibro") + 1;
                    lib.setIdlibro(idLibro);
                    lib.setIsbn(Long.parseLong(txtISBN.getText()));
                    lib.setTitulo(txtTitulo.getText());
                    lib.setAutores(txtAutores.getText());
                    lib.setNrocopiastot(Byte.parseByte(txtNCopias.getText()));
                    lib.setNrocopiasdisp(Byte.parseByte(txtNCopias.getText()));
                    lib.setBeditoriales((Beditoriales) cboEditorial.getSelectedItem());
                    lib.setBmaterias((Bmaterias) cboMateria.getSelectedItem());
                    lib.setAniopublic(Short.parseShort(txtAnio.getText()));
                    lib.setNropaginas(Integer.parseInt(txtPaginas.getText()));
                    lib.setTraductor(txtTraductor.getText());
                    lib.setIdioma(txtIdioma.getText());
                    lib.setEstanteria(Integer.parseInt(txtEstanteria.getText()));
                    lib.setBalda(Integer.parseInt(txtBalda.getText()));
                    lib.setPreciocompra(idLibro);
                    lib.setEliminado(false);
                    sesion.save(lib);
                    tx.commit();
                    sesion.close();
                    JOptionPane.showMessageDialog(null, "Registro creado");
                    this.dispose();

                } else {
                    JOptionPane.showMessageDialog(null, "Ya existe el libro ");
                }

            }

        } else {
            comprobarVacios();
        }

    }

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed

        nuevo_hibernate();

    }//GEN-LAST:event_btnGrabarActionPerformed

    private void txtISBNKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtISBNKeyTyped
        // TODO add your handling code here:

        funciones.escribirSoloEnterosLimitado(evt, "ISBN", 9, txtError, txtISBN);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtTitulo.requestFocus();
        }
        if (txtISBN.getText().length() > 0) {
            if (existe_libro_hibernate(txtISBN.getText(), "b.isbn")) {
                txtError.setText("ISBN: Ya existe un libro con ese ISBN");
            }
        }


    }//GEN-LAST:event_txtISBNKeyTyped

    private void txtTituloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTituloKeyTyped
        // TODO add your handling code here:
        funciones.limitarCaracteres(evt, "TITULO", 100, txtError, txtTitulo);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtAutores.requestFocus();
        }
        if (txtTitulo.getText().length() > 0) {
            if (existe_libro_hibernate(txtTitulo.getText(), "b.titulo")) {
                txtError.setText("Titulo: Ya existe un libro con ese Titulo");
            }
        }


    }//GEN-LAST:event_txtTituloKeyTyped

    private void txtAutoresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAutoresKeyTyped
        // TODO add your handling code here:
        funciones.limitarCaracteres(evt, "AUTORES", 120, txtError, txtAutores);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtNCopias.requestFocus();
        }
    }//GEN-LAST:event_txtAutoresKeyTyped

    private void txtNCopiasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNCopiasKeyTyped
        // TODO add your handling code here:
        funciones.escribirSoloEnterosLimitado(evt, "Nº COPIAS", 2, txtError, txtNCopias);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtAnio.requestFocus();
        }
    }//GEN-LAST:event_txtNCopiasKeyTyped

    private void txtAnioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnioKeyTyped
        // TODO add your handling code here:
        funciones.escribirSoloEnterosLimitado(evt, "AÑO PUBLICACION", 4, txtError, txtAnio);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtPaginas.requestFocus();
        }
    }//GEN-LAST:event_txtAnioKeyTyped

    private void txtPaginasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaginasKeyTyped
        // TODO add your handling code here:
        funciones.escribirSoloEnterosLimitado(evt, "Nº PAGINAS", 5, txtError, txtPaginas);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtTraductor.requestFocus();
        }
    }//GEN-LAST:event_txtPaginasKeyTyped

    private void txtTraductorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTraductorKeyTyped
        // TODO add your handling code here:
        funciones.limitarCaracteres(evt, "TRADUCTOR", 60, txtError, txtTraductor);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtIdioma.requestFocus();
        }
    }//GEN-LAST:event_txtTraductorKeyTyped

    private void txtIdiomaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdiomaKeyTyped
        // TODO add your handling code here:
        funciones.limitarCaracteres(evt, "IDIOMA", 40, txtError, txtIdioma);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtEstanteria.requestFocus();
        }
    }//GEN-LAST:event_txtIdiomaKeyTyped

    private void txtEstanteriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstanteriaKeyTyped
        // TODO add your handling code here:
        funciones.limitarCaracteres(evt, "ESTANTERIA", 3, txtError, txtEstanteria);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtBalda.requestFocus();
        }
    }//GEN-LAST:event_txtEstanteriaKeyTyped

    private void txtBaldaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBaldaKeyTyped
        // TODO add your handling code here:
        funciones.limitarCaracteres(evt, "BALDA", 3, txtError, txtBalda);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtPrecio.requestFocus();
        }
    }//GEN-LAST:event_txtBaldaKeyTyped

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
        // TODO add your handling code here:
        funciones.limitarCaracteres(evt, "PRECIO", 3, txtError, txtPrecio);
    }//GEN-LAST:event_txtPrecioKeyTyped

    private void txtISBNPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtISBNPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txtISBNPropertyChange

    private boolean existe_libro_hibernate(String campo, String columna) {
        String sql = "SELECT COUNT(*) FROM Blibros b WHERE " + columna + "  ='" + campo + "'";
        int c = 0;
        Session sesion = JF_Menu.instanciaHibernate.openSession();
        Query consulta = sesion.createQuery(sql);
        Iterator iter = consulta.iterate();
        Long l = (Long) iter.next();
        if (l == 0) {
            return false;
        } else {
            return true;
        }
    }

    private Integer maximo_hibernate(String tabla, String id) {
        String sql = "SELECT MAX(" + id + ") FROM " + tabla;
        Session sesion = JF_Menu.instanciaHibernate.openSession();
        Integer max = (Integer) sesion.createQuery(sql).uniqueResult();
        sesion.close();
        if (max == null) {
            return 0;
        } else {
            return max;
        }

    }

    private void limpiar() {
        txtISBN.setText("");
        txtTitulo.setText("");
        txtAutores.setText("");
        txtNCopias.setText("");
        cboEditorial.setSelectedIndex(0);
        cboMateria.setSelectedIndex(0);
        txtAnio.setText("");
        txtPaginas.setText("");
        txtTraductor.setText("");
        txtIdioma.setText("");
        txtEstanteria.setText("");
        txtBalda.setText("");
        txtPrecio.setText("");
        txtError.setText("");
    }

    // Te dice si los campos están vacíos
    private boolean isEmpty() {
        if (txtISBN.getText().isEmpty()
                || txtTitulo.getText().isEmpty()
                || txtAutores.getText().isEmpty()
                || txtNCopias.getText().isEmpty()
                || cboEditorial.getSelectedIndex() == 0
                || cboMateria.getSelectedIndex() == 0) {
            return true;

        } else {
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox cboEditorial;
    private javax.swing.JComboBox cboMateria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtAnio;
    private javax.swing.JTextField txtAutores;
    private javax.swing.JTextField txtBalda;
    private javax.swing.JTextField txtError;
    private javax.swing.JTextField txtEstanteria;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtIdioma;
    private javax.swing.JTextField txtNCopias;
    private javax.swing.JTextField txtPaginas;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtTitulo;
    private javax.swing.JTextField txtTraductor;
    // End of variables declaration//GEN-END:variables
}
