/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import conexion.ConexionSingleton;
import conexion.HibernateUtil;
import funciones.MetodosComunes;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.Bmultas;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

/**
 *
 * @author Juan
 */
public class JD_MultaNueva extends javax.swing.JDialog {

    /**
     * Creates new form JD_MultaNueva
     */
    private String idMulta;
    private boolean esNuevo = false;
    private MetodosComunes funciones = new MetodosComunes();
    
    public JD_MultaNueva(java.awt.Frame parent, boolean modal,String idMulta) {
        super(parent, modal);
        this.idMulta = idMulta;
        if (this.idMulta.equals("0")) {
            esNuevo = true;
        }
        initComponents();
        rellenarCamposHibernate();
    }
    
    
    public void rellenarCamposHibernate(){
       if(!esNuevo){
           String sql = "FROM Bmultas WHERE idmulta="+idMulta;
            Session sesion = JF_Menu.instanciaHibernate.openSession();
            Query consulta = sesion.createQuery(sql);
            Iterator iter = consulta.iterate();
            Bmultas mul = (Bmultas)iter.next();
            txtDescripcion.setText(mul.getDescmulta());
            txtMinimo.setText(Short.toString(mul.getDiasmin()));
            txtMaximo.setText(Short.toString(mul.getDiasmax()));
            txtCantidad.setText(Integer.toString(mul.getCantidad()));
           
            sesion.close();
       }
    
    }
    
     private boolean comprobarVacios() {
        boolean estanVacios = false;
        String texto = "ERROR:\n";
        if (txtDescripcion.getText().isEmpty()) {
            texto = texto + "Rellene el campo DESCRIPCION\n";
            estanVacios = true;
        }
        if(txtMinimo.getText().isEmpty()){
            texto = texto + "Rellene el campo DIAS MINIMO\n";
            estanVacios = true;
        }
        if(txtMaximo.getText().isEmpty()){
            texto  = texto + "Rellene el campo DIAS MAXIMO\n";
            estanVacios = true;
        }
        if(txtCantidad.getText().isEmpty()){
            texto = texto + "Rellene el campo CANTIDAD\n";
            estanVacios = true;
        }
        if(Integer.parseInt(txtMinimo.getText())<11){
            texto = texto + "Dias Minimo debe ser mayor que 10";
            estanVacios = true;
        }
        if (estanVacios) {
            JOptionPane.showMessageDialog(null, texto);
        }
        return estanVacios;

    }
     private boolean isEmpty() {
        if (txtDescripcion.getText().isEmpty()
                || txtMinimo.getText().isEmpty()
                || txtMaximo.getText().isEmpty()
                || txtCantidad.getText().isEmpty()
                || Integer.parseInt(txtMinimo.getText())<11) {
            return true;
        } else {
            return false;
        }
    }
     
      private void limpiar() {
        txtDescripcion.setText("");
        txtMinimo.setText("");
        txtMaximo.setText("");
        txtCantidad.setText("");
        txtError.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        txtMinimo = new javax.swing.JTextField();
        txtMaximo = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtError = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nueva Multa");

        jLabel1.setText("Descripción");

        jLabel2.setText("Dias Mínimo");

        jLabel3.setText("Días Máximo");

        jLabel4.setText("Cantidad");

        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });

        txtMinimo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMinimoKeyTyped(evt);
            }
        });

        txtMaximo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMaximoKeyTyped(evt);
            }
        });

        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        btnNuevo.setText("Añadir");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/EXIT_ (23).jpg"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel5.setText("MENSAJES");

        txtError.setEditable(false);
        txtError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtCantidad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                .addComponent(txtMaximo, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtMinimo, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(btnNuevo))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(btnLimpiar)
                                .addGap(53, 53, 53)
                                .addComponent(btnSalir)
                                .addGap(0, 13, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(txtError)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevo)
                            .addComponent(btnLimpiar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

     public void nuevo_hibernate(){
         // TODO add your handling code here:
        if (!isEmpty()) {
                if (!esNuevo) {
                    Session sesion = JF_Menu.instanciaHibernate.openSession();
                    Transaction transaccion = sesion.beginTransaction();
                    Bmultas mult = (Bmultas)sesion.load(Bmultas.class,Integer.parseInt(idMulta));
                    mult.setDescmulta(txtDescripcion.getText());
                    mult.setDiasmin(Short.parseShort(txtMinimo.getText()));
                    mult.setDiasmax(Short.parseShort(txtMaximo.getText()));
                    mult.setCantidad(Integer.parseInt(txtCantidad.getText()));
                    sesion.update(mult);
                    transaccion.commit();
                    sesion.close();
                    JOptionPane.showMessageDialog(null, "Registro Actualizado");
                    this.dispose();

                } else {

                    if (!existe_multa_hibernate(txtDescripcion.getText(),"m.descmulta")) {
                        SessionFactory instancia = HibernateUtil.getSessionFactory();
                        Session sesion = instancia.openSession();
                        Transaction tx = sesion.beginTransaction();
                        System.out.println("Inserto una fila en la tabla Bmultas");
                        Bmultas mult = new Bmultas();
                        Integer idMulta = maximo_hibernate("Bmultas", "idmulta") + 1;
                         mult.setIdmulta(idMulta);
                         mult.setDescmulta(txtDescripcion.getText());
                         mult.setDiasmin(Short.parseShort(txtMinimo.getText()));
                         mult.setDiasmax(Short.parseShort(txtMaximo.getText()));
                         mult.setCantidad(Integer.parseInt(txtCantidad.getText()));
                         mult.setEliminado(false);
                        sesion.save(mult);
                        tx.commit();
                        sesion.close();
                        JOptionPane.showMessageDialog(null, "Registro creado");
                        this.dispose();

                    } else {
                        JOptionPane.showMessageDialog(null, "Ya existe la multa ");
                    }

                }
           
        } else {
            comprobarVacios();
        }
    }
    
    private void nuevo(){
         if (!isEmpty()) {
            try {
                String sql;
                Statement consulta = ConexionSingleton.conexion.createStatement();
                if (!esNuevo) {
                    sql = "UPDATE BMULTAS  SET  DESCMULTA=" + "'" + txtDescripcion.getText() + "'"
                            +",DIASMIN="+txtMinimo.getText()+",DIASMAX= "+txtMaximo.getText()+",CANTIDAD="+txtCantidad.getText()+
                            " WHERE IDMULTA= " + idMulta;

                    System.out.println(sql);
                    int filas = consulta.executeUpdate(sql);

                    consulta.close();
                    JOptionPane.showMessageDialog(null, "Registro Actualizado");
                    this.dispose();

                } else {

                    if (!existe_multa(txtDescripcion.getText(), "DESCMULTA", "BMULTAS")) {

                        Integer idMulta = maximo("BMULTAS", "IDMULTA") + 1;
                        sql = "INSERT INTO BMULTAS VALUES (" + idMulta + ",'" + txtDescripcion.getText()
                                + "'"+","+txtMinimo.getText()+","+txtMaximo.getText()+","+txtCantidad.getText()+",0)";
                        System.out.println(sql);
                        int filas = consulta.executeUpdate(sql);
                        consulta.close();
                        JOptionPane.showMessageDialog(null, "Registro creado");
                        this.dispose();

                    } else {
                        JOptionPane.showMessageDialog(null, "Ya existe la multa ");
                    }

                }
            } catch (SQLException ex) {
                Logger.getLogger(JD_MultaNueva.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            comprobarVacios();
        }
    }
    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        nuevo_hibernate();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
        // TODO add your handling code here:
        funciones.limitarCaracteres(evt, "DESCRIPCION", 40, txtError, txtDescripcion);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtMinimo.requestFocus();
        }
    }//GEN-LAST:event_txtDescripcionKeyTyped

    private void txtMinimoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMinimoKeyTyped
        // TODO add your handling code here:
        funciones.escribirSoloEnterosLimitado(evt, "DIAS MINIMO", 4, txtError, txtMinimo);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtMaximo.requestFocus();
        }
    }//GEN-LAST:event_txtMinimoKeyTyped

    private void txtMaximoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaximoKeyTyped
        // TODO add your handling code here:
        funciones.escribirSoloEnterosLimitado(evt, "DIAS MAXIMO", 4, txtError, txtMaximo);
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtCantidad.requestFocus();
        }
    }//GEN-LAST:event_txtMaximoKeyTyped

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        // TODO add your handling code here:
        funciones.escribirSoloDoublesCajaTexto(txtCantidad, evt, "CANTIDAD", txtError, 3, 2);
    }//GEN-LAST:event_txtCantidadKeyTyped

    private boolean existe_multa(String valor, String columna, String tabla) throws SQLException {
        boolean resultado = false;
        String sql = "SELECT " + columna + " FROM " + tabla + " WHERE ELIMINADO=0";
        ResultSet fila;
        try (Statement consulta = ConexionSingleton.conexion.createStatement()) {
            fila = consulta.executeQuery(sql);
            while (fila.next()) {
                if (fila.getString(columna).equalsIgnoreCase(valor)) {
                    resultado = true;
                }
            }
            fila.close();
        }
        return resultado;
    }
     private boolean existe_multa_hibernate(String campo, String columna) {
        String sql = "SELECT COUNT(*) FROM Bmultas m WHERE " + columna + "  ='" + campo + "'";
        int c = 0;
        Session sesion = JF_Menu.instanciaHibernate.openSession();
        Query consulta = sesion.createQuery(sql);
        Iterator iter = consulta.iterate();
        Long l = (Long) iter.next();
        if (l == 0) {
            return false;
        } else {
            return true;
        }
    }
    
    private Integer maximo(String tabla, String id) throws SQLException {
        String sql = "SELECT MAX(" + id + ") maximo FROM " + tabla;
        ResultSet resultado;
        try (Statement consulta = ConexionSingleton.conexion.createStatement()) {
            resultado = consulta.executeQuery(sql);
            resultado.next();
            return resultado.getInt("maximo");
        }

    }
     private Integer maximo_hibernate(String tabla,String id){
        String sql = "SELECT MAX(" +id+ ") FROM "+ tabla;
        Session sesion = JF_Menu.instanciaHibernate.openSession();
        Integer max = (Integer) sesion.createQuery(sql).uniqueResult();
        
        sesion.close();
        if(max==null){
            return 0;
        }else{
            return max;
        }
       
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtError;
    private javax.swing.JTextField txtMaximo;
    private javax.swing.JTextField txtMinimo;
    // End of variables declaration//GEN-END:variables
}
